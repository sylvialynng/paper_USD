{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww12260\viewh18060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Universal Screen Description (USD)\
Used by the entertainment industries (notably Pixar)\
Being adopted for games, simulation, AR, manufacturing and e-commerce\
3 core aspects:\
	Scene description specification\
	API\
	Rendering System\
\
Application interacts via the API\
Apple has multiple rendering systems for USD\
\
Stage\
	1 or more layers that represent how a scene is viewed\
	Layers are typically files with scene information\
Prim\
	primary container objects of a scene\
	prims can contain other prims\
	USD has many different kinds of prims ex: meshes, lights and materials\
	prims use structured data that defines the role of the prim on the stage ex: geometry and materials\
	rich library of built in types for describing a scene\
	can be extended by the use of custom schemas\
	prims can have attributes that are not visual data (type value pairs)\
	prims can also contain metadata (key-value pairs)\
	you can refer to different prims without copying the data\
Layers\
	can be stacked (like in photoshop)\
	layers that are higher can overload data from the lower layers\
\
Collaboration with other team members is achieved through composition\
\
When working with large data scens, USD Allows for deferred loading of data being referenced (payload)\
\
Optimize the scene using scene graph instancing allows for the reuse of the parts of the scene to improve memory use and performance, rather than duplicating the data for each prim}